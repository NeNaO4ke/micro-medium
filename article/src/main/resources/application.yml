server:
  port: 8081
  servlet:
    context-path: /article
  compression:
    enabled: true
    mime-types: application/json,application/x-protobuf
spring:
  application.name: article-service
  couchbase:
    username: Administrator
    password: 666666
    bucket-name: medium
    host: ${COUCHBASE_SERVER:127.0.0.1}
    port: 8091
  artemis:
    mode: native
    broker-url: "tcp://0.0.0.0:61616"
    user: "admin"
    password: "secret"
    pool:
      idle-timeout: 5s
  cloud:
    stream:
      binder:
        brokers: localhost:9092
      kafka:
        binder:
          configuration:
            key.serializer: org.apache.kafka.common.serialization.StringSerializer
            value.serializer: org.apache.kafka.common.serialization.StringSerializer
  boot:
    admin:
      client:
        url: ${ADMIN_SERVER:http://localhost:8761/admin}
  main:
    banner-mode: off
eureka:
  client:
    registry-fetch-interval-seconds: 5
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
  instance:
    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}

sentry:
  dsn: ${SENTRY_DSN}
  in-app-includes: org.medium.user
  send-default-pii: on


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

